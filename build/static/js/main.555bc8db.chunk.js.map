{"version":3,"sources":["helper/Card.js","component/Course.js","component/New.js","component/Update.js","helper/Menu.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","course","_id","cId","title","fee","desc","duration","className","to","onClick","id","window","confirm","Axios","delete","then","result","location","catch","err","console","log","deleteHandler","Course","state","get","status","data","setState","this","map","item","key","Component","New","React","createRef","submitHandler","bind","e","preventDefault","body","value","post","alert","method","onSubmit","htmlFor","type","name","ref","cols","rows","Update","match","params","message","current","patch","defaultValue","Menu","data-toggle","data-target","App","Fragment","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.555bc8db.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\nconst URI = \"https://bpcourse.herokuapp.com\";\r\n\r\nconst Card = (props) => {\r\n    const { _id,cId,title,fee,desc,duration }  = props.course;\r\n\r\n    const deleteHandler = (id) => {\r\n            const status = window.confirm(\"Are you sure to delete?\");\r\n            if(status) {\r\n                Axios.delete(`${URI}/course/${id}`)\r\n                .then(result => {\r\n                    window.location = \"/\";\r\n                }).catch(err => console.log(err));\r\n            } else {\r\n                return false;\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className=\"panel panel-primary\">\r\n            <div className=\"panel-heading\">\r\n                <h3 className=\"panel-title\"> { cId }<span className=\"pull-right\">{ title }</span> </h3>\r\n            </div>\r\n            <div className=\"panel-body\">\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        Fee <span className=\"pull-right\"> &#8377;{ fee } </span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        Duration <span className=\"pull-right\"> { duration } </span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <details>\r\n                                <summary>Description</summary>\r\n                                <p> {desc} </p>\r\n                        </details>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"panel-footer\">\r\n                <NavLink to={\"/update/\" + _id} className=\"btn btn-sm btn-primary\">\r\n                    <span className=\"glyphicon glyphicon-edit\"></span>\r\n                </NavLink>\r\n\r\n                <button className=\"btn btn-sm btn-danger pull-right\" onClick={() => deleteHandler(_id)} >\r\n                    <span className=\"glyphicon glyphicon-trash\"></span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport Card from '../helper/Card';\r\n// import { video1 } from '../helper/video';\r\n\r\nconst URI = \"https://bpcourse.herokuapp.com\";\r\n\r\nexport default class Course extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            course: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`${URI}/course`)\r\n        .then(result => {\r\n            console.log(result);\r\n            if(result.status == 200) {\r\n                const course = result.data;\r\n                this.setState({ course });\r\n            }\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>Course List</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"row\">\r\n                    {\r\n                        this.state.course.map((item,key) => {\r\n                            return (\r\n                                <div className=\"col-md-4\" key={key}>\r\n                                    <Card course={item} />\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nconst URI = \"https://bpcourse.herokuapp.com\";\r\n\r\nexport default class New extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.cId = React.createRef();\r\n        this.title = React.createRef();\r\n        this.fee = React.createRef();\r\n        this.duration = React.createRef();\r\n        this.desc = React.createRef();\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    submitHandler(e) {\r\n        e.preventDefault();\r\n        const body = {\r\n            cId: this.cId.value,\r\n            title: this.title.value,\r\n            fee: this.fee.value,\r\n            duration: this.duration.value,\r\n            desc: this.desc.value\r\n        };\r\n        console.log('output', body);\r\n        Axios.post(`${URI}/course`, body)\r\n        .then(result => {\r\n            alert(\"Successfully Created\");\r\n            window.location = \"/\";\r\n        }).catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>New Course</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                        <form method=\"post\" onSubmit={this.submitHandler} >\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"cId\">Course Id</label>\r\n                                <input type=\"text\" name=\"cId\" id=\"cId\" className=\"form-control\" ref={item => this.cId = item} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"title\">Title</label>\r\n                                <input type=\"text\" name=\"title\" id=\"title\" className=\"form-control\" ref={item => this.title = item} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"fee\">Fee</label>\r\n                                <input type=\"number\" name=\"fee\" id=\"fee\" className=\"form-control\" ref={item => this.fee = item} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"duration\">Duration</label>\r\n                                <input type=\"number\" name=\"duration\" id=\"duration\" className=\"form-control\" ref={item => this.duration = item} />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"desc\">Description</label>\r\n                                <textarea name=\"desc\" id=\"desc\" cols=\"30\" rows=\"5\" className=\"form-control\" ref={item => this.desc = item}></textarea>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"submit\" value=\"Create\" className=\"btn btn-success\"/>\r\n                                <input type=\"reset\" value=\"Cancel\" className=\"btn btn-warning\"/>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\n\r\nconst URI = \"https://bpcourse.herokuapp.com\";\r\n\r\n\r\nexport default class Update extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            course: null\r\n        };\r\n        this.cId = React.createRef();\r\n        this.title = React.createRef();\r\n        this.fee = React.createRef();\r\n        this.duration = React.createRef();\r\n        this.desc = React.createRef();\r\n\r\n        this.submitHandler = this.submitHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`${URI}/course/${ this.state.id }`)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                this.setState({\r\n                    course: result.data\r\n                });\r\n            })\r\n            .catch(err => console.log(err.message));\r\n    }\r\n\r\n    submitHandler(e) {\r\n        e.preventDefault();\r\n        const data = {\r\n            cId: this.cId.current.value,\r\n            title: this.title.current.value,\r\n            fee: this.fee.current.value,\r\n            duration: this.duration.current.value,\r\n            desc: this.desc.current.value\r\n        };\r\n        console.log('edit', data);\r\n\r\n        Axios.patch(`${URI}/course/${this.state.id}`, data)\r\n            .then(result => {\r\n                alert(\"Successfully updated\");\r\n                window.location = \"/\";\r\n            })\r\n            .catch(err => console.log(err.message));\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.course === null) return null;\r\n        const { cId,title,fee,duration,desc } = this.state.course;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 jumbotron text-center\">\r\n                        <h3>Update Course { this.state.id } </h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3 well well-lg\">\r\n                    <form method=\"post\" onSubmit={this.submitHandler} >\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"cId\">Course Id</label>\r\n                            <input type=\"text\"  className=\"form-control\" ref={this.cId} defaultValue={cId} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input type=\"text\"  className=\"form-control\" ref={this.title} defaultValue={title} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"fee\">Fee</label>\r\n                            <input type=\"number\"  className=\"form-control\" ref={this.fee} defaultValue={fee} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"duration\">Duration</label>\r\n                            <input type=\"number\"  className=\"form-control\" ref={this.duration} defaultValue={duration} />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"desc\">Description</label>\r\n                            <textarea cols=\"30\" rows=\"5\" className=\"form-control\" ref={this.desc} defaultValue={desc} ></textarea>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\" value=\"Update\" className=\"btn btn-success\"/>\r\n                            <input type=\"reset\" value=\"Cancel\" className=\"btn btn-warning\"/>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Menu() {\r\n    return (\r\n        <nav className=\"navbar navbar-default navbar-fixed-top\">\r\n            <div className=\"container\">\r\n                <div className=\"navbar-header\">\r\n                    <NavLink className=\"navbar-brand\" to=\"/\">RestAPI</NavLink>\r\n                    <button className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#menu\">\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                        <span className=\"icon-bar\"></span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"navbar-collapse collapse\" id=\"menu\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li>\r\n                            <NavLink to=\"/\">Course</NavLink>\r\n                        </li>\r\n                        <li>\r\n                            <NavLink to=\"/new\">Create New</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router,Route,Switch, Redirect } from 'react-router-dom';\nimport Course from \"./component/Course\";\nimport New from \"./component/New\";\nimport Update from \"./component/Update\";\nimport Menu from \"./helper/Menu\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n        <Router>\n             <Menu/>\n            <Switch>\n                <Route exact path=\"/\" component={ Course } />\n                <Route exact path=\"/new\" component={ New } />\n                <Route exact path=\"/update/:id\" component={ Update } />\n                <Route exact path=\"**\">\n                    <Redirect to=\"/\" />\n                </Route>\n            </Switch>\n        </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}